/* httpseverywhere.vapi generated by valac 0.26.1, do not modify. */

namespace HTTPSEverywhere {
	[CCode (cheader_filename = "httpseverywhere.h")]
	public class Ruleset : GLib.Object {
		public Ruleset ();
		public void add_exclusion (string exclusion);
		public void add_rule (string from, string to);
		public void add_target (string host);
		public Ruleset.from_xml (Xml.Node* root) throws HTTPSEverywhere.RulesetError;
		public string rewrite (string url);
		public Gee.ArrayList<HTTPSEverywhere.Target> targets { get; }
	}
	[CCode (cheader_filename = "httpseverywhere.h")]
	public class Target : GLib.Object {
		public Target (string host);
		public bool matches (string url);
		public string host { get; set; }
	}
	[CCode (cheader_filename = "httpseverywhere.h")]
	public errordomain RulesetError {
		PARSE_ERROR
	}
	[CCode (cheader_filename = "httpseverywhere.h")]
	public static bool has_https (string url);
	[CCode (cheader_filename = "httpseverywhere.h")]
	public static void init ();
	[CCode (cheader_filename = "httpseverywhere.h")]
	public static string rewrite (owned string url);
}
